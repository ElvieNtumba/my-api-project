{
  "stats": {
    "suites": 11,
    "tests": 10,
    "passes": 7,
    "pending": 0,
    "failures": 3,
    "start": "2024-11-08T21:31:22.634Z",
    "end": "2024-11-08T21:31:31.320Z",
    "duration": 8686,
    "testsRegistered": 10,
    "passPercent": 70,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d1ad3f8b-1e33-43e7-a5dc-a05e14109c00",
      "title": "",
      "fullFile": "/home/elvie/Documents/Wonkanet react/wonkanet-store/my-api-project/test/api.test.mjs",
      "file": "/test/api.test.mjs",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "150dd371-464c-45e7-af66-70e5e34adcf1",
          "title": "API Endpoints Tests",
          "fullFile": "/home/elvie/Documents/Wonkanet react/wonkanet-store/my-api-project/test/api.test.mjs",
          "file": "/test/api.test.mjs",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a4cc60d4-68d1-45a8-a8f4-d9a4993b12bb",
              "title": "GET /users",
              "fullFile": "/home/elvie/Documents/Wonkanet react/wonkanet-store/my-api-project/test/api.test.mjs",
              "file": "/test/api.test.mjs",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should retrieve the list of users",
                  "fullTitle": "API Endpoints Tests GET /users should retrieve the list of users",
                  "timedOut": false,
                  "duration": 1002,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request.execute(serverUrl)\n.get('/users')\n.end((err, res) => {\n  if (err) {\n    return done(err); // Pass the error to `done()`\n  }\n  expect(res).to.have.status(200);\n  expect(res.body).to.be.an('array');\n  done(); \n    });",
                  "err": {},
                  "uuid": "35816dd8-5ab1-453c-b15a-22296330f3aa",
                  "parentUUID": "a4cc60d4-68d1-45a8-a8f4-d9a4993b12bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "35816dd8-5ab1-453c-b15a-22296330f3aa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1002,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "bf321f14-e6b4-4fe7-80b2-bd875c7a22f0",
              "title": "GET /users/:email",
              "fullFile": "/home/elvie/Documents/Wonkanet react/wonkanet-store/my-api-project/test/api.test.mjs",
              "file": "/test/api.test.mjs",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should retrieve a single user by email",
                  "fullTitle": "API Endpoints Tests GET /users/:email should retrieve a single user by email",
                  "timedOut": false,
                  "duration": 963,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request.execute(serverUrl)\n  .get('/users/giakatuf@gmail.com')  // Use an email that exists in your database\n  .end((err, res) => {\n    if (err) {\n      done(err);\n    } else {\n      expect(res).to.have.status(200);\n      expect(res.body.email).to.equal('giakatuf@gmail.com');\n      done();\n    }\n  });",
                  "err": {},
                  "uuid": "ed0770cf-a98c-4db5-974d-082f2ef0e6c5",
                  "parentUUID": "bf321f14-e6b4-4fe7-80b2-bd875c7a22f0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ed0770cf-a98c-4db5-974d-082f2ef0e6c5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 963,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0ff50b8e-098e-4c51-a286-7753004586e5",
              "title": "POST /USERS",
              "fullFile": "/home/elvie/Documents/Wonkanet react/wonkanet-store/my-api-project/test/api.test.mjs",
              "file": "/test/api.test.mjs",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new user",
                  "fullTitle": "API Endpoints Tests POST /USERS should create a new user",
                  "timedOut": false,
                  "duration": 716,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "chai.request.execute(serverUrl)\n  .post('/USERS')\n  .send({\n    username: 'ntumbaelvie',\n    email: 'ntumbaelvie@gmail.com',\n    password: 'password123'\n  })\n  .end((err, res) => {\n    if (err) {\n      console.error(err);  // Log error if it occurs\n      done(err);\n    } else {\n      expect(res).to.have.status(201);  // Expect 201 status code for success\n      expect(res.body).to.have.property('message').eql('User registered successfully');\n      expect(res.body).to.be.an('object');\n      expect(res.body).to.have.property('userId');  // Ensure the response contains userId\n      done();\n    }\n  });",
                  "err": {
                    "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 201 but got 500",
                    "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 201 but got 500\n    at file:///home/elvie/Documents/Wonkanet%20react/wonkanet-store/my-api-project/test/api.test.mjs:57:33\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:837:12)\n    at /home/elvie/Documents/Wonkanet react/wonkanet-store/my-api-project/node_modules/superagent/lib/node/index.js:1078:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:21:7)\n    at IncomingMessage.emit (node:events:525:35)\n    at endReadableNT (node:internal/streams/readable:1358:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)",
                    "diff": "- 500\n+ 201\n"
                  },
                  "uuid": "787a7f7a-59c1-4bd9-a299-9dc6a15dfca5",
                  "parentUUID": "0ff50b8e-098e-4c51-a286-7753004586e5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "787a7f7a-59c1-4bd9-a299-9dc6a15dfca5"
              ],
              "pending": [],
              "skipped": [],
              "duration": 716,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1bc5edca-bf36-4480-b9cd-ae58be89c966",
              "title": "POST /USERS",
              "fullFile": "/home/elvie/Documents/Wonkanet react/wonkanet-store/my-api-project/test/api.test.mjs",
              "file": "/test/api.test.mjs",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not create a new user if email already exists",
                  "fullTitle": "API Endpoints Tests POST /USERS should not create a new user if email already exists",
                  "timedOut": false,
                  "duration": 703,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "chai.request.execute(serverUrl)\n  .post('/USERS')\n  .send({\n    username: 'ntumbaelvie',\n    email: 'ntumbaelvie@gmail.com', // Use an existing email\n    password: 'password123'\n  })\n  .end((err, res) => {\n    if (err) {\n      console.error(err);\n      done(err);\n    } else {\n      expect(res).to.have.status(409);  // Expect 409 status for conflict\n      expect(res.body).to.have.property('error').eql('User already exists');\n      expect(res.body).to.be.an('object');\n      done();\n    }\n  });",
                  "err": {
                    "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 409 but got 500",
                    "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 409 but got 500\n    at file:///home/elvie/Documents/Wonkanet%20react/wonkanet-store/my-api-project/test/api.test.mjs:81:33\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:837:12)\n    at /home/elvie/Documents/Wonkanet react/wonkanet-store/my-api-project/node_modules/superagent/lib/node/index.js:1078:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:21:7)\n    at IncomingMessage.emit (node:events:525:35)\n    at endReadableNT (node:internal/streams/readable:1358:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)",
                    "diff": "- 500\n+ 409\n"
                  },
                  "uuid": "ee52b47a-8563-41a2-a226-0417d4b6e075",
                  "parentUUID": "1bc5edca-bf36-4480-b9cd-ae58be89c966",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "ee52b47a-8563-41a2-a226-0417d4b6e075"
              ],
              "pending": [],
              "skipped": [],
              "duration": 703,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "76656e44-d22c-40e8-9afc-361483d08139",
              "title": "POST /USERS",
              "fullFile": "/home/elvie/Documents/Wonkanet react/wonkanet-store/my-api-project/test/api.test.mjs",
              "file": "/test/api.test.mjs",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an error for missing fields",
                  "fullTitle": "API Endpoints Tests POST /USERS should return an error for missing fields",
                  "timedOut": false,
                  "duration": 826,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "chai.request.execute(serverUrl)\n  .post('/USERS')\n  .send({\n    email: 'ntumbaelvie@gmail.com', // Missing username and password\n  })\n  .end((err, res) => {\n    if (err) {\n      console.error(err);\n      done(err);\n    } else {\n      expect(res).to.have.status(400);  // Expect 400 for bad request (optional, depending on your validation)\n      expect(res.body).to.have.property('error').eql('Failed to register user');\n      expect(res.body).to.be.an('object');\n      done();\n    }\n  });",
                  "err": {
                    "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 400 but got 500",
                    "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 400 but got 500\n    at file:///home/elvie/Documents/Wonkanet%20react/wonkanet-store/my-api-project/test/api.test.mjs:102:33\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:837:12)\n    at /home/elvie/Documents/Wonkanet react/wonkanet-store/my-api-project/node_modules/superagent/lib/node/index.js:1078:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:21:7)\n    at IncomingMessage.emit (node:events:525:35)\n    at endReadableNT (node:internal/streams/readable:1358:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)",
                    "diff": "- 500\n+ 400\n"
                  },
                  "uuid": "786b602b-9a0a-4fb3-8b2e-879ba048b027",
                  "parentUUID": "76656e44-d22c-40e8-9afc-361483d08139",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "786b602b-9a0a-4fb3-8b2e-879ba048b027"
              ],
              "pending": [],
              "skipped": [],
              "duration": 826,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2fc1f984-f1c2-4433-80b3-c5e9c274812a",
              "title": "GET /cart",
              "fullFile": "/home/elvie/Documents/Wonkanet react/wonkanet-store/my-api-project/test/api.test.mjs",
              "file": "/test/api.test.mjs",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should retrieve the cart items",
                  "fullTitle": "API Endpoints Tests GET /cart should retrieve the cart items",
                  "timedOut": false,
                  "duration": 848,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request.execute(serverUrl)\n  .get('/cart')\n  .end((err, res) => {\n    if (err) {\n      done(err);\n    } else {\n      expect(res).to.have.status(200);\n      expect(res.body).to.be.an('array');\n      done();\n    }\n  });",
                  "err": {},
                  "uuid": "7b21d76e-f4de-4aa8-91d4-2fea999d97a0",
                  "parentUUID": "2fc1f984-f1c2-4433-80b3-c5e9c274812a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b21d76e-f4de-4aa8-91d4-2fea999d97a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 848,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2bbda2e1-c4af-4e8f-acef-64b5fc80c29c",
              "title": "POST /cart",
              "fullFile": "/home/elvie/Documents/Wonkanet react/wonkanet-store/my-api-project/test/api.test.mjs",
              "file": "/test/api.test.mjs",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add a new item to the cart",
                  "fullTitle": "API Endpoints Tests POST /cart should add a new item to the cart",
                  "timedOut": false,
                  "duration": 885,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const newCartItem = {\n  _id: '6652e60b7cd388b684ef01bb', // Cart item ID\n  userId: '1000',                  // User ID\n  clothingType: 'baggy jeans',     // Clothing type\n  price: 'R350.00',                // Price\n  size: 'xs',                      // Size\n  color: 'blue',                   // Color\n  quantity: 1                      // Quantity\n};\n    \nchai.request.execute(serverUrl)\n  .post('/cart')  // Assuming POST /cart is the endpoint\n  .send(newCartItem)  // Send the cart item\n  .end((err, res) => {\n    if (err) return done(err);\n    \n    // Check if the response has a status code of 201 (created)\n    expect(res).to.have.status(201);  // Change expected status to 201\n    \n    // Check that the response contains a message indicating success\n    expect(res.body).to.have.property('message');\n    expect(res.body.message).to.equal('Item added to cart');\n    \n    done();\n  });",
                  "err": {},
                  "uuid": "b3f026df-0368-4d86-be8d-3c03258f7006",
                  "parentUUID": "2bbda2e1-c4af-4e8f-acef-64b5fc80c29c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b3f026df-0368-4d86-be8d-3c03258f7006"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 885,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "93068b6a-08b8-4642-902b-8eb530f9ba4f",
              "title": "GET /clothing",
              "fullFile": "/home/elvie/Documents/Wonkanet react/wonkanet-store/my-api-project/test/api.test.mjs",
              "file": "/test/api.test.mjs",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should retrieve the list of clothing items",
                  "fullTitle": "API Endpoints Tests GET /clothing should retrieve the list of clothing items",
                  "timedOut": false,
                  "duration": 951,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request.execute(serverUrl)\n  .get('/clothing')\n  .end((err, res) => {\n    if (err) {\n      done(err);\n    } else {\n      expect(res).to.have.status(200);\n      expect(res.body).to.be.an('array');\n      done();\n    }\n  });",
                  "err": {},
                  "uuid": "23de5d19-e39a-478b-bc01-26b4d79c22cd",
                  "parentUUID": "93068b6a-08b8-4642-902b-8eb530f9ba4f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "23de5d19-e39a-478b-bc01-26b4d79c22cd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 951,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fd51ac6e-61d7-4577-b809-f95ee4763623",
              "title": "GET /clothing/:id",
              "fullFile": "/home/elvie/Documents/Wonkanet react/wonkanet-store/my-api-project/test/api.test.mjs",
              "file": "/test/api.test.mjs",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should retrieve a single clothing item by ID",
                  "fullTitle": "API Endpoints Tests GET /clothing/:id should retrieve a single clothing item by ID",
                  "timedOut": false,
                  "duration": 889,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request.execute(serverUrl)\n  .get('/clothing/672e649fd09cf13f18e4c19b') // Use the correct ID\n  .end((err, res) => {\n    if (err) {\n      console.error(\"Error Response:\", res.body);\n      return done(err);\n    }\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property('_id', '672e649fd09cf13f18e4c19b');\n    expect(res.body).to.have.property('name', 'T-shirt');\n    expect(res.body).to.have.property('size', 'M');\n    expect(res.body).to.have.property('price', 19.99);\n    done();\n  });",
                  "err": {},
                  "uuid": "ff79a14a-29aa-419e-80a5-73092fe6dce5",
                  "parentUUID": "fd51ac6e-61d7-4577-b809-f95ee4763623",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff79a14a-29aa-419e-80a5-73092fe6dce5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 889,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "be0ca242-bca8-4153-ac4f-2d22f68bc4f7",
              "title": "POST /clothing",
              "fullFile": "/home/elvie/Documents/Wonkanet react/wonkanet-store/my-api-project/test/api.test.mjs",
              "file": "/test/api.test.mjs",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add a new clothing item",
                  "fullTitle": "API Endpoints Tests POST /clothing should add a new clothing item",
                  "timedOut": false,
                  "duration": 859,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request.execute(serverUrl)\n  .post('/clothing')\n  .send({\n    name: 'T-shirt',\n    size: 'M',\n    price: 19.99\n  })\n  .end((err, res) => {\n    if (err) return done(err);\n    expect(res.body).to.have.property('message', 'Clothing item added');\n    expect(res.body).to.have.property('clothingItemId');\n    done();\n  });",
                  "err": {},
                  "uuid": "389b7941-e411-42c8-834d-a4bde3e6fec1",
                  "parentUUID": "be0ca242-bca8-4153-ac4f-2d22f68bc4f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "389b7941-e411-42c8-834d-a4bde3e6fec1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 859,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}